<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login de Administrador</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-blue-dark: #0A1D37;           /* Azul marino profundo para fondos */
            --secondary-blue: #1A3E6C;              /* Azul intermedio para degradados/patrones */
            --accent-green: #0A8437;                /* Verde de acento principal */
            --accent-green-hover: #086629;          /* Verde de acento en estado hover */
            --text-light: #F2F2F2;                  /* Color de texto principal (casi blanco) */
            --text-lighter: #D3D3D3;                /* Color de texto secundario (gris claro) */
            --glass-background: rgba(255, 255, 255, 0.08); /* Fondo transparente para efecto cristal (ligeramente menos opaco) */
            --glass-border: rgba(255, 255, 255, 0.15);      /* Borde sutil para efecto cristal (ligeramente menos opaco) */
            --input-fill: rgba(255, 255, 255, 0.05);        /* Relleno para campos de input (más sutil) */
            --placeholder-color: rgba(255, 255, 255, 0.4); /* Color de placeholder/label (más sutil) */
            --icon-color: rgba(255, 255, 255, 0.6);         /* Color de iconos (más sutil) */
            --error-color: #e74c3c;                 /* Rojo vibrante para mensajes de error */
            --error-background-subtle: rgba(231, 76, 60, 0.1); /* Fondo muy sutil para mensajes de error */
        }

        body {
            font-family: 'Montserrat', sans-serif;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: var(--primary-blue-dark);
            overflow: hidden; 
            position: relative;
            color: var(--text-light);
            line-height: 1.6; 
        }

        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background:
                radial-gradient(circle at 10% 20%, var(--secondary-blue) 0%, transparent 50%),
                radial-gradient(circle at 90% 80%, var(--secondary-blue) 0%, transparent 50%),
                linear-gradient(to right, rgba(0,0,0,0.02) 1px, transparent 1px),
                linear-gradient(to bottom, rgba(0,0,0,0.02) 1px, transparent 1px);
            background-size:
                150vmin 150vmin,
                150vmin 150vmin,
                40px 40px,
                40px 40px;
            background-position: 0 0;
            opacity: 0.7;
            z-index: -1;
            animation: backgroundShift 15s linear infinite;
        }

        @keyframes backgroundShift {
            from { background-position: 0 0; }
            to { background-position: 600px 600px; }
        }

        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -2; 
            overflow: hidden;
        }

        .particle {
            position: absolute;
            background-color: var(--accent-green);
            border-radius: 50%;
            opacity: 0.15; 
            animation: floatAndFade 25s infinite ease-in-out;
            filter: blur(0.5px); 
        }

        .particle:nth-child(1) { width: 7px; height: 7px; left: 10%; top: 20%; animation-duration: 20s; animation-delay: 0s; }
        .particle:nth-child(2) { width: 10px; height: 10px; left: 30%; top: 50%; animation-duration: 24s; animation-delay: 2s; }
        .particle:nth-child(3) { width: 8px; height: 8px; left: 60%; top: 10%; animation-duration: 19s; animation-delay: 4s; }
        .particle:nth-child(4) { width: 12px; height: 12px; left: 80%; top: 70%; animation-duration: 28s; animation-delay: 6s; }
        .particle:nth-child(5) { width: 6px; height: 6px; left: 20%; top: 90%; animation-duration: 21s; animation-delay: 1s; }
        .particle:nth-child(6) { width: 9px; height: 9px; left: 70%; top: 30%; animation-duration: 26s; animation-delay: 3s; }

        @keyframes floatAndFade {
            0% { transform: translateY(0) translateX(0) scale(1); opacity: 0.15; }
            50% { transform: translateY(-80px) translateX(40px) scale(1.1); opacity: 0.3; }
            100% { transform: translateY(0) translateX(0) scale(1); opacity: 0.15; }
        }

        /* ========================================================= */
        /* === 3. CONTENEDOR PRINCIPAL DEL LOGIN ================= */
        /* ========================================================= */
        .login-container {
            position: relative;
            background-color: var(--glass-background);
            backdrop-filter: blur(18px); 
            -webkit-backdrop-filter: blur(18px);
            border: 1px solid var(--glass-border);
            padding: 55px 45px; 
            border-radius: 22px; 
            box-shadow:
                0 18px 45px rgba(0, 0, 0, 0.7), 
                0 0 30px rgba(0, 123, 255, 0.25); 
            text-align: center;
            z-index: 10;
            max-width: 500px; 
            width: 90%;
            animation: slideInUp 0.9s cubic-bezier(0.25, 0.46, 0.45, 0.94); 
            color: var(--text-light);
            transition: transform 0.4s ease, box-shadow 0.4s ease; 
            overflow: hidden; 
        }

        /* Animación de entrada del contenedor */
        @keyframes slideInUp {
            from { opacity: 0; transform: translateY(60px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .login-container:hover {
            transform: translateY(-8px); 
            box-shadow:
                0 25px 60px rgba(0, 0, 0, 0.8), 
                0 0 40px rgba(0, 123, 255, 0.5); 
        }

        /* ========================================================= */
        /* === 4. TIPOGRAFÍA Y MENSAJE DE ERROR ================== */
        /* ========================================================= */
        .login-container h2 {
            color: var(--text-light);
            margin-bottom: 20px; 
            margin-top: -30px; 
            padding-top: 10px; 
            font-size: 2.8em; 
            font-weight: 700;
            text-shadow:
                0 0 20px var(--accent-green),
                0 0 30px var(--primary-blue-dark); 
            letter-spacing: 1.5px; 
            line-height: 1.2; 
        }

        .error-message {
            color: var(--error-color);
            margin-top: 25px; 
            margin-bottom: 25px; 
            font-size: 1.05em;
            font-weight: 600; 
            background-color: var(--error-background-subtle);
            padding: 15px 25px; 
            border-radius: 10px;
            border: 1px solid var(--error-color);
            animation: shake 0.7s cubic-bezier(.36,.07,.19,.97) both; 
            transform-origin: top center;
        }

        @keyframes shake {
            10%, 90% { transform: translate3d(-1px, 0, 0); }
            20%, 80% { transform: translate3d(2px, 0, 0); }
            30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }
            40%, 60% { transform: translate3d(4px, 0, 0); }
        }

        /* ========================================================= */
        /* === 5. CAMPOS DE FORMULARIO (INPUTS Y LABELS) ========= */
        /* ========================================================= */
        .form-group {
            position: relative;
            margin-bottom: 35px;
        }

        .form-group label {
            position: absolute;
            top: 20px; 
            left: 55px; 
            color: var(--placeholder-color);
            pointer-events: none;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94); 
            font-size: 1.1em; 
            font-weight: 500;
            transform-origin: left;
        }

        /* Efecto de label flotante al enfocar o escribir */
        .form-group input:focus + label,
        .form-group input:not(:placeholder-shown) + label {
            top: -15px; 
            left: 0; 
            font-size: 0.9em; 
            color: var(--accent-green);
            transform: scale(0.95); 
            font-weight: 600;
        }

        .form-group .input-wrapper {
            display: flex;
            align-items: center;
            border: 1px solid var(--glass-border);
            border-radius: 14px; 
            background-color: var(--input-fill);
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1); 
        }

        .form-group .input-wrapper:focus-within {
            border-color: var(--accent-green);
            box-shadow:
                0 0 15px rgba(10, 132, 55, 0.5), 
                0 0 8px rgba(0, 0, 0, 0.2); 
        }

        .form-group .input-wrapper svg {
            margin-left: 20px; 
            width: 24px; 
            height: 24px;
            fill: var(--icon-color);
            transition: fill 0.3s ease;
        }

        .form-group .input-wrapper:focus-within svg {
            fill: var(--accent-green);
        }

        .form-group input {
            flex-grow: 1;
            border: none;
            padding: 20px 20px 20px 10px; 
            font-size: 1.15em;
            outline: none;
            background-color: transparent;
            color: var(--text-light);
            caret-color: var(--accent-green);
            transition: background-color 0.3s ease;
            height: 100%; 
        }

        .form-group input:focus {
            background-color: rgba(255, 255, 255, 0.02); 
        }

        .form-group input::placeholder {
            color: transparent;
        }
        
        /* Estilos específicos para el toggle de mostrar/ocultar contraseña */
        .toggle-password {
            margin-right: 20px;
            cursor: pointer;
            position: relative;
            z-index: 20; 
            display: flex;
            align-items: center;
        }

        .toggle-password svg {
            fill: var(--icon-color);
            transition: fill 0.3s ease;
        }

        .toggle-password:hover svg {
            fill: var(--text-light); 
        }

        /* Cuando el input-wrapper de la contraseña está enfocado, el icono del ojo también cambia de color */
        .form-group #password + .toggle-password svg {
        }

        /* ========================================================= */
        /* === 6. BOTÓN DE ACCESO Y ANIMACIONES ================== */
        /* ========================================================= */
        .login-button {
            position: relative;
            width: 100%;
            padding: 20px 35px; 
            background: linear-gradient(145deg, #007bff 0%, #0056b3 100%);
            color: white;
            border: none;
            border-radius: 14px; 
            font-size: 1.25em; 
            font-weight: 700; 
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94); 
            letter-spacing: 0.8px;
            box-shadow: 0 8px 20px rgba(0, 123, 255, 0.6), 
                                0 0 0 2px rgba(0, 123, 255, 0.3); 
            overflow: hidden;
        }

        .login-button:hover {
            background: linear-gradient(145deg, #0056b3 0%, #004085 100%); 
            transform: translateY(-3px); 
            box-shadow: 0 12px 30px rgba(0, 123, 255, 0.8), 
                                0 0 0 4px rgba(0, 123, 255, 0.5); 
        }

        .login-button:active {
            transform: translateY(0);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4);
        }

        /* Estado de carga del botón */
        .login-button.loading {
            pointer-events: none;
            background: #4A5568;
            color: transparent;
            box-shadow: none;
            cursor: wait;
            border: 1px solid rgba(255, 255, 255, 0.2); 
        }

        .login-button.loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 24px; 
            height: 24px;
            margin-top: -12px;
            margin-left: -12px;
            border: 4px solid rgba(255, 255, 255, 0.3); 
            border-top-color: white;
            border-radius: 50%;
            animation: spin 0.7s linear infinite;
        }

        /* Estado de éxito del botón (opcional, para feedback visual) */
        .login-button.success {
            background: linear-gradient(145deg, #28a745 0%, #218838 100%);
            pointer-events: none;
            color: white;
            box-shadow: 0 6px 18px rgba(40, 167, 69, 0.5); 
        }

        /* SweetAlert2 custom styles */
        .swal2-styled.swal2-confirm {
            background-color: var(--accent-green) !important;
            color: var(--text-light) !important;
            font-weight: 600 !important;
            border-radius: 10px !important;
            padding: 10px 20px !important;
            font-size: 1.1em !important;
            box-shadow: 0 4px 10px rgba(10, 132, 55, 0.4) !important;
        }

        .swal2-popup {
            background: var(--primary-blue-dark) !important; 
            color: var(--text-light) !important;
            border: 1px solid var(--glass-border) !important;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.7);
        }

        .swal2-title {
            color: var(--text-light) !important;
            font-weight: 700 !important;
        }

        .swal2-html-container {
            color: var(--text-lighter) !important;
        }

        .swal2-icon.swal2-success [class^=swal2-success-line][class$="long"],
        .swal2-icon.swal2-success [class^=swal2-success-line][class$="tip"] {
            background-color: var(--accent-green) !important; 
        }
        .swal2-icon.swal2-success .swal2-success-ring {
            border-color: rgba(10, 132, 55, 0.5) !important; 
        }
        .swal2-icon.swal2-error [class^=swal2-x-mark-line] {
            background-color: var(--error-color) !important; 
        }
        .swal2-icon.swal2-error {
            border-color: var(--error-color) !important;
        }

        /* ========================================================= */
        /* === 7. MEDIA QUERIES PARA RESPONSIVE DESIGN =========== */
        @media (max-width: 768px) {
            body {
                /* Permite que el contenido se ajuste en el eje Y si es necesario */
                align-items: flex-start;
                padding: 40px 20px; /* Añade padding para no pegar el contenido a los bordes */
                min-height: 100vh; /* Asegura que el body ocupe al menos todo el viewport */
                overflow-y: auto; /* Permite scroll vertical si el contenido es muy largo */
            }

            .login-container {
                width: 100%; /* Ocupa todo el ancho disponible */
                max-width: 400px; /* Un poco menos ancho para pantallas medianas */
                padding: 40px 30px; /* Reduce el padding para pantallas más pequeñas */
                margin-top: 0; /* Elimina margen superior para centrado vertical si aplica */
                margin-bottom: 0; /* Elimina margen inferior */
                /* Asegura que no se desborde horizontalmente */
                box-sizing: border-box;
                animation: none; /* Deshabilita la animación de entrada en móviles para mejor rendimiento */
                transform: translateY(0) !important; /* Resetea cualquier transformación previa */
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.6); /* Sombra más sutil en móviles */
            }

            .login-container:hover {
                transform: translateY(0); /* Deshabilita el efecto de levantamiento en hover para móviles */
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.6); /* Mantiene la sombra normal */
            }

            .login-container h2 {
                font-size: 2.2em; /* Reduce el tamaño del título */
                margin-bottom: 15px;
                margin-top: -20px; /* Ajuste para el nuevo padding */
            }

            .form-group {
                margin-bottom: 25px; /* Reduce el espacio entre campos */
            }

            .form-group label {
                font-size: 1em; /* Ajusta el tamaño de la etiqueta */
                top: 18px; /* Ajusta la posición inicial de la etiqueta */
                left: 50px; /* Ajusta la posición del label para que no choque con el icono */
            }

            .form-group input:focus + label,
            .form-group input:not(:placeholder-shown) + label {
                top: -12px; /* Mueve la etiqueta un poco menos arriba */
                font-size: 0.8em; /* Tamaño final más pequeño */
            }

            .form-group .input-wrapper svg {
                margin-left: 15px; /* Reduce el margen del icono */
                width: 20px; /* Icono más pequeño */
                height: 20px;
            }

            .form-group input {
                padding: 18px 18px 18px 8px; /* Reduce el padding del input */
                font-size: 1em; /* Reduce el tamaño del texto del input */
            }

            .toggle-password {
                margin-right: 15px; /* Reduce el margen del icono de toggle */
            }

            .login-button {
                padding: 18px 25px; /* Reduce el padding del botón */
                font-size: 1.1em; /* Reduce el tamaño del texto del botón */
                box-shadow: 0 6px 15px rgba(0, 123, 255, 0.5); /* Sombra más sutil */
            }

            .login-button:hover {
                transform: translateY(0); /* Deshabilita el levantamiento en hover */
                box-shadow: 0 6px 15px rgba(0, 123, 255, 0.5); /* Mantiene la sombra */
            }

            /* Partículas más pequeñas y menos animadas en móviles para rendimiento */
            .particle {
                opacity: 0.1; /* Más sutil */
                animation-duration: 30s !important; /* Animación más lenta */
                filter: blur(0.2px); /* Menos desenfoque */
            }
            .particle:nth-child(1) { width: 5px; height: 5px; }
            .particle:nth-child(2) { width: 7px; height: 7px; }
            .particle:nth-child(3) { width: 6px; height: 6px; }
            .particle:nth-child(4) { width: 8px; height: 8px; }
            .particle:nth-child(5) { width: 4px; height: 4px; }
            .particle:nth-child(6) { width: 6px; height: 6px; }
        }

        /* Ajustes para pantallas aún más pequeñas (hasta 480px - teléfonos) */
        @media (max-width: 480px) {
            .login-container {
                padding: 30px 20px; /* Más reducción de padding */
                border-radius: 18px; /* Menos redondeado */
            }

            .login-container h2 {
                font-size: 1.8em; /* Título aún más pequeño */
                letter-spacing: 1px;
            }

            .form-group {
                margin-bottom: 20px; /* Más reducción de espacio */
            }

            .form-group label {
                font-size: 0.9em;
                top: 16px;
                left: 45px; /* Ajusta para pantallas muy pequeñas */
            }

            .form-group input {
                padding: 16px 16px 16px 6px;
                font-size: 0.95em;
            }

            .form-group .input-wrapper svg {
                margin-left: 12px;
                width: 18px;
                height: 18px;
            }

            .toggle-password {
                margin-right: 12px;
            }

            .login-button {
                padding: 16px 20px;
                font-size: 1em;
            }
        }

        @media (max-height: 700px) and (min-width: 769px) {
            body {
                align-items: flex-start; /* Alinea al inicio si la altura es limitada */
                padding: 30px 0; /* Añade padding vertical */
                min-height: auto; /* Permite que el body sea más pequeño si el contenido es pequeño */
                overflow-y: auto; /* Habilita el scroll si el contenido es largo */
            }

            .login-container {
                transform: scale(0.9); /* Reduce el tamaño del contenedor si la pantalla es muy corta */
                margin: 20px auto; /* Centra y añade margen para no pegar al borde */
            }

            .login-container:hover {
                transform: scale(0.9) translateY(-8px); /* Mantiene el hover pero escalado */
            }
        }
    </style>
</head>
<body>
    <div class="particles">
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
    </div>

    <div class="login-container">
        <h2>INICIAR SESIÓN <br> DE ADMINISTRADOR</h2>

        <% if (typeof error !== 'undefined' && error) { %>
            <div class="error-message" style="display: none;">
                <%= error %>
            </div>
        <% } %>
        <% if (typeof success !== 'undefined' && success) { %>
            <div class="success-message" style="display: none;">
                <%= success %>
            </div>
        <% } %>

        <form action="/admin/login" method="POST" id="loginForm">
            <div class="form-group">
                <div class="input-wrapper">
                    <svg viewBox="0 0 24 24">
                        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"/>
                    </svg>
                    <input type="text" id="username" name="username" required autocomplete="off" placeholder=" ">
                    <label for="username">Usuario</label>
                </div>
            </div>

            <div class="form-group">
                <div class="input-wrapper">
                    <svg class="password-icon" viewBox="0 0 24 24">
                        <path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2z"/>
                    </svg>
                    <input type="password" id="password" name="password" required autocomplete="off" placeholder=" ">
                    <label for="password">Contraseña</label>
                    <span class="toggle-password" id="togglePassword">
                        <svg class="eye-open" viewBox="0 0 24 24" width="24" height="24">
                            <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zm0 12c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>
                        </svg>
                        <svg class="eye-closed" viewBox="0 0 24 24" width="24" height="24" style="display: none;">
                            <path d="M12 7c-2.76 0-5 2.24-5 5 0 .34.03.67.09 1H4.18c-1.73 4.39-6 7.5-11 7.5-1.73-4.39-6-7.5-11-7.5s-9.27 3.11-11-7.5c-1.73-4.39-6-7.5-11-7.5zm-5 5c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3-3-1.34-3-3zM2 4.27l2.59 2.59c-3.15 1.58-5.28 4.67-5.59 8.14L3.6 15.3c.09-.32.17-.65.23-.97C4.69 11.43 7.33 8.34 12 8.34c1.75 0 3.4.47 4.88 1.37l2.62-2.62L22 4.27 20.73 3 3 20.73 2 19.73 2 4.27zM7.36 10.63l-1.07 1.07L4.47 10l-1.06 1.06 1.06 1.06L3.4 13.12l1.06 1.06 1.06-1.06 1.07 1.07-1.07 1.07-1.06-1.06 1.06-1.06-1.06 1.06zM12 17.5c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"/>
                        </svg>
                    </span>
                </div>
            </div>

            <div class="form-group">
                <button type="submit" class="login-button">Acceder</button>
            </div>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.20/dist/sweetalert2.all.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Oculta el div de error/éxito EJS inicial si existe, para que SweetAlert lo maneje
            const errorMessageDiv = document.querySelector('.error-message');
            if (errorMessageDiv) {
                errorMessageDiv.style.display = 'none';
                // Si hay un mensaje de error flash al cargar la página (ej. redirigido desde una ruta protegida)
                // lo mostramos con SweetAlert2
                if (errorMessageDiv.textContent.trim().length > 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Acceso Denegado',
                        text: errorMessageDiv.textContent.trim(),
                        confirmButtonText: 'Entendido'
                    });
                }
            }
            const successMessageDiv = document.querySelector('.success-message');
            if (successMessageDiv) {
                successMessageDiv.style.display = 'none';
                if (successMessageDiv.textContent.trim().length > 0) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Éxito',
                        text: successMessageDiv.textContent.trim(),
                        showConfirmButton: false,
                        timer: 1500
                    });
                    
                }
            }
        });

        // Script para mostrar/ocultar contraseña
        document.addEventListener('DOMContentLoaded', function() {
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.getElementById('password');
            const eyeOpen = togglePassword.querySelector('.eye-open');
            const eyeClosed = togglePassword.querySelector('.eye-closed');
            const passwordIcon = document.querySelector('.password-icon'); // El icono del candado

            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);

                eyeOpen.style.display = (type === 'password' ? 'block' : 'none');
                eyeClosed.style.display = (type === 'password' ? 'none' : 'block');
                
                // Mantiene el color del icono de visibilidad verde si el input está enfocado
                if (document.activeElement === passwordInput) {
                    (type === 'password' ? eyeOpen : eyeClosed).style.fill = 'var(--accent-green)';
                }
            });

            // Eventos para cambiar el color de los iconos al enfocar/desenfocar el input de contraseña
            passwordInput.addEventListener('focus', function() {
                passwordIcon.style.fill = 'var(--accent-green)';
                if (passwordInput.getAttribute('type') === 'text') { // Si la contraseña está visible
                    eyeClosed.style.fill = 'var(--accent-green)';
                } else { // Si la contraseña está oculta
                    eyeOpen.style.fill = 'var(--accent-green)';
                }
            });

            passwordInput.addEventListener('blur', function() {
                passwordIcon.style.fill = 'var(--icon-color)';
                eyeOpen.style.fill = 'var(--icon-color)';
                eyeClosed.style.fill = 'var(--icon-color)';
            });

            // También actualiza el color del icono de ojo al escribir si el input está enfocado
            passwordInput.addEventListener('input', function() {
                if (document.activeElement === passwordInput) {
                    passwordIcon.style.fill = 'var(--accent-green)';
                    if (passwordInput.getAttribute('type') === 'text') {
                        eyeClosed.style.fill = 'var(--accent-green)';
                    } else {
                        eyeOpen.style.fill = 'var(--accent-green)';
                    }
                }
            });
        });

        // ================================================================
        // MODIFICACIÓN CLAVE: Manejo del envío del formulario con FETCH
        // ================================================================
        document.getElementById('loginForm').addEventListener('submit', async function(event) {
            event.preventDefault(); 

            const button = this.querySelector('.login-button');
            button.classList.add('loading'); 

            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            try {
                const response = await fetch('/admin/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json' 
                    },
                    body: JSON.stringify({ username, password }) 
                });

                const data = await response.json(); 
                button.classList.remove('loading'); 

                if (response.ok) { 
                    Swal.fire({
                        icon: 'success',
                        title: '¡Bienvenido!',
                        text: data.message || 'Inicio de sesión exitoso.', 
                        showConfirmButton: false,
                        timer: 1500, 
                        timerProgressBar: true
                    }).then(() => {
                        window.location.href = data.redirect || '/admin/dashboard'; 
                    });
                } else { 
                    Swal.fire({
                        icon: 'error',
                        title: 'Error de inicio de sesión',
                        text: data.message || 'Credenciales inválidas. Intenta de nuevo.', 
                        confirmButtonText: 'Reintentar'
                    });
                }

            } catch (error) {
                console.error('Error al conectar con el servidor:', error);
                button.classList.remove('loading');
                Swal.fire({
                    icon: 'error',
                    title: 'Error de conexión',
                    text: 'No se pudo conectar con el servidor. Verifica tu conexión o inténtalo más tarde.',
                    confirmButtonText: 'Entendido'
                });
            }
        });
    </script>
</body>
</html>